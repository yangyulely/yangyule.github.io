<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MLOps 体系结构模型</title>
    <url>/2024/06/22/mlops/</url>
    <content><![CDATA[<h1 id="MLOps-体系结构模型"><a href="#MLOps-体系结构模型" class="headerlink" title="MLOps 体系结构模型"></a>MLOps 体系结构模型</h1><p>人工智能继续改变企业，但这导致企业在数字化转型和组织变革方面面临新的挑战。根据 <a href="https://www.forbes.com/sites/forbestechcouncil/2022/12/05/top-six-trends-and-recommendations-for-ai-and-ml-in-2023" title="2023 年福布斯报告">2023 年福布斯报告</a>，这些挑战可以总结如下：</p>
<ul>
<li>分析技术堆栈围绕分析&#x2F;批处理工作负载构建的公司需要开始适应实时数据处理（福布斯）。这种变化不仅影响了数据的收集方式，还导致了对新的数据处理和数据分析架构模型的需求。</li>
<li>AI 法规需要被视为 AI&#x2F;ML 架构模型的一部分。据《福布斯》报道，“Gartner 预测，到 2025 年，法规将迫使公司专注于人工智能道德、透明度和隐私。因此，这些平台将需要遵守即将出台的标准。</li>
<li>必须建立专门的 AI 团队，他们不仅应该能够构建和维护 AI 平台，还应该能够与其他团队合作，通过这些平台支持模型的生命周期。</li>
</ul>
<p>这些新挑战的答案似乎是 <strong>MLOps</strong> 或机器学习操作。MLOps 建立在 DevOps 和 DataOps 之上，旨在促进机器学习 （ML） 应用程序，并更好地管理 ML 系统的复杂性。本文旨在系统地概述 MLOps 架构挑战，并演示管理这种复杂性的方法。</p>
<h3 id="MLOps-应用程序：设置用例"><a href="#MLOps-应用程序：设置用例" class="headerlink" title="MLOps 应用程序：设置用例"></a>MLOps 应用程序：设置用例</h3><p>在本文中，我们的示例用例是一家多年来一直在进行宏观经济预测和投资风险管理的金融机构。目前，预测过程基于外部宏观经济数据的部分手动加载和后处理，然后根据个人喜好使用各种工具和脚本进行统计建模。</p>
<p>然而，根据该机构管理层的说法，由于最近宣布的银行法规和安全要求，这一过程是不可接受的。此外，与市场上的竞争对手相比，计算结果的交付速度太慢，在财务上是不可接受的。对新的数字解决方案的投资需要充分了解复杂性和预期成本。它应该从收集需求开始，然后构建最小可行产品。</p>
<h4 id="需求收集"><a href="#需求收集" class="headerlink" title="需求收集"></a>需求收集</h4><p>对于解决方案架构师来说，设计过程从新体系结构需要解决的问题规范开始，例如：</p>
<ul>
<li>手动数据收集速度慢，容易出错，并且需要大量工作</li>
<li>实时数据处理不是当前数据加载方法的一部分</li>
<li>没有数据版本控制，因此不支持随时间推移的可重复性</li>
<li>模型的代码在本地计算机上手动触发，并不断更新，无需版本控制</li>
<li>完全缺少通过通用平台共享数据和代码</li>
<li>预测过程不表示为业务流程，所有步骤都是分散的和不同步的，并且大多数步骤都需要手动操作</li>
<li>数据和模型的实验不可重现且不可审计</li>
<li>在内存消耗增加或占用大量 CPU 的操作的情况下，不支持可伸缩性</li>
<li>目前不支持对整个过程进行监控和审计</li>
</ul>
<p>下图演示了新架构的四个主要组件：监视和审计平台、模型部署平台、模型开发平台和数据管理平台。<br><img src="/img/mlops/overview.png"><br>**图 1.**MLOps 体系结构图 </p>
<h4 id="平台设计决策"><a href="#平台设计决策" class="headerlink" title="平台设计决策"></a>平台设计决策</h4><p>设计 MLOps 平台时要考虑的两个主要策略是：</p>
<ol>
<li>从头开始开发与选择平台</li>
<li>在基于云的、本地或混合模型之间进行选择</li>
</ol>
<h5 id="从头开始开发与选择完全打包的-MLOps-平台"><a href="#从头开始开发与选择完全打包的-MLOps-平台" class="headerlink" title="从头开始开发与选择完全打包的 MLOps 平台"></a>从头开始开发与选择完全打包的 MLOps 平台</h5><p>从头开始构建 MLOps 平台是最灵活的解决方案。它将提供解决公司未来任何需求的可能性，而无需依赖其他公司和服务提供商。如果公司已经拥有所需的专家和训练有素的团队来设计和构建 ML 平台，那将是一个不错的选择。</p>
<p>预打包解决方案是模拟不需要大量自定义的标准 ML 流程的不错选择。一种选择甚至是购买一个预训练的模型（例如，模型即服务），如果市场上有售，并只围绕它构建数据加载、监控和跟踪模块。这种解决方案的缺点是，如果需要添加新功能，可能很难按时完成这些添加。</p>
<p>将平台作为黑匣子购买通常需要围绕它构建额外的组件。选择平台时要考虑的一个重要标准是扩展或自定义它的可能性。</p>
<h5 id="基于云的本地或混合部署模型"><a href="#基于云的本地或混合部署模型" class="headerlink" title="基于云的本地或混合部署模型"></a>基于云的本地或混合部署模型</h5><p>基于云的解决方案已经上市，AWS、Google 和 Azure 提供了流行的选项。在没有严格的数据隐私要求和法规的情况下，<strong>基于云</strong>的解决方案是一个不错的选择，因为模型训练和模型服务的基础设施资源是无限的。对于非常严格的安全要求，或者如果基础结构在公司内部已经可用，则<strong>本地</strong>解决方案是可以接受的。对于已经构建了部分系统但希望通过其他服务对其进行扩展的公司来说，<strong>混合</strong>解决方案是一种选择，例如，购买预训练模型并与本地存储的数据集成或合并到现有的业务流程模型中。</p>
<h3 id="MLOps-架构实践"><a href="#MLOps-架构实践" class="headerlink" title="MLOps 架构实践"></a>MLOps 架构实践</h3><p>从我们的用例来看，金融机构没有足够的专家从头开始构建专业的 MLOps 平台，但由于法规和额外的财务限制，它也不想投资端到端托管的 MLOps 平台。该机构的架构委员会已决定采用开源方法，仅在需要时购买工具。架构概念是围绕开发简约组件和可组合系统的想法构建的。总体思路是围绕微服务构建的，这些微服务涵盖了可伸缩性和可用性等非功能性需求。为了最大限度地简化系统，对系统组件做出了以下决定。</p>
<h4 id="数据管理平台"><a href="#数据管理平台" class="headerlink" title="数据管理平台"></a>数据管理平台</h4><p>数据收集过程将完全自动化。由于外部数据提供程序的异构性，每个数据源都将有一个单独的数据加载组件。在写入实时数据和读取大量数据时，数据库选择至关重要。由于宏观经济数据的基于时间的性质以及该机构已有的关系数据库专家，他们选择使用开源数据库<a href="https://github.com/timescale/timescaledb" title="TimescaleDB。">TimescaleDB。</a></p>
<p>使用标准关系数据库 GUI 客户端提供基于 SQL 的标准 API、执行数据分析和执行数据转换的可能性将减少交付平台第一个原型的时间。可以跟踪数据版本和转换并将其保存到单独的数据版本或表中。</p>
<h4 id="模型开发平台"><a href="#模型开发平台" class="headerlink" title="模型开发平台"></a>模型开发平台</h4><p>模型开发过程包括四个步骤：</p>
<ol>
<li>数据读取和转换</li>
<li>模型训练</li>
<li>模型序列化</li>
<li>模型包装</li>
</ol>
<p>训练模型后，参数化和训练的实例通常存储为打包工件。代码存储和版本控制最常见的解决方案是 <a href="https://en.wikipedia.org/wiki/Git" title="Git">Git</a>。此外，该金融机构已经配备了像 <a href="https://github.com/" title="GitHub">GitHub</a> 这样的解决方案，提供定义用于构建、打包和发布代码的管道的功能。基于 Git 的系统的体系结构通常依赖于一组执行管道的分布式工作器计算机。该选项将用作简约的 MLOps 架构原型的一部分，以训练模型。</p>
<p>训练模型后，下一步是将其作为已发布和版本控制的项目存储在模型存储库中。在该阶段，将模型作为二进制文件、共享文件系统甚至工件存储库存储在数据库中都是可以接受的选项。稍后，可以将模型注册表或 Blob 存储服务合并到管道中。模型的 API 微服务将公开模型的宏观经济预测功能。</p>
<h4 id="模型部署平台"><a href="#模型部署平台" class="headerlink" title="模型部署平台"></a>模型部署平台</h4><p>使 MLOps 原型尽可能简单的决定也适用于部署阶段。部署模型基于微服务体系结构。每个模型都可以使用 Docker 容器作为无状态服务进行部署，并按需扩展。该原则也适用于数据加载组件。一旦完成了第一个部署步骤，并明确了所有微服务的依赖关系，就可能需要一个工作流引擎来编排已建立的业务流程。</p>
<h4 id="模型监控和审计平台"><a href="#模型监控和审计平台" class="headerlink" title="模型监控和审计平台"></a>模型监控和审计平台</h4><p>传统的微服务架构已经配备了用于收集、存储和监控日志数据的工具。<a href="https://prometheus.io/docs/introduction/overview/" title="Prometheus">Prometheus</a>、<a href="https://www.elastic.co/kibana" title="Kibana">Kibana</a> 和 <a href="https://www.elastic.co/elasticsearch" title="ElasticSearch">ElasticSearch</a> 等工具足够灵活，可以生成特定的审计和性能报告。</p>
<h3 id="开源-MLOps-平台"><a href="#开源-MLOps-平台" class="headerlink" title="开源 MLOps 平台"></a>开源 MLOps 平台</h3><p>简约的 MLOps 架构是公司初始数字化转型的良好开端。但是，并行跟踪可用的 MLOps 工具对于下一个设计阶段至关重要。下表提供了一些最流行的开源工具的摘要。</p>
<p>**表 1.**用于初始数字化转型的开源 MLOps 工具</p>
<p><strong>工具</strong></p>
<p><strong>描述</strong></p>
<p><strong>职能领域</strong></p>
<p><a href="https://github.com/kubeflow/" title="Kubeflow">Kubeflow</a></p>
<p>使 Kubernetes 上的 ML 工作流部署变得简单、可移植且可扩展</p>
<p>跟踪和版本控制、管道编排和模型部署</p>
<p><a href="https://github.com/mlflow/mlflow" title="MLflow（机器学习流）">MLflow（机器学习流）</a></p>
<p>一个用于管理端到端 ML 生命周期的开源平台</p>
<p>跟踪和版本控制</p>
<p><a href="https://github.com/bentoml" title="BentoML系列">BentoML系列</a></p>
<p>用于 AI 应用和推理管道的开放标准和 SDK;提供自动生成 API 服务器、REST API、gRPC 和长时间运行的推理作业等功能;并提供自动生成 Docker 容器映像的功能</p>
<p>跟踪和版本控制、管道编排、模型开发和模型部署</p>
<p><a href="https://github.com/tensorflow/tfx" title="TensorFlow 扩展">TensorFlow 扩展</a> （TFX）</p>
<p>一个生产就绪的平台;专为部署和管理 ML 管道而设计;包括用于数据验证、转换、模型分析和服务的组件</p>
<p>模型开发、管道编排和模型部署</p>
<p><a href="https://airflow.apache.org/" title="Apache Airflow">Apache Airflow</a>， <a href="https://beam.apache.org/" title="Apache Beam">Apache Beam</a></p>
<p>一个灵活的框架，用于定义和调度复杂的工作流，尤其是数据工作流，包括 ML</p>
<p>管道编排</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>MLOps 通常被称为机器学习的 DevOps，它本质上是 ML 应用程序的一组架构模式。然而，尽管与许多知名体系结构有相似之处，但 MLOps 方法给 MLOps 架构师带来了一些新的挑战。一方面，重点必须放在 MLOps 服务的兼容性和组成上。另一方面，人工智能法规将迫使现有系统和服务不断适应新的监管规则和标准。我怀疑，随着 MLOps 领域的不断发展，一种提供 AI 道德和监管分析的新型服务将很快成为 ML 领域企业关注的焦点。</p>
]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s安装nginx Ingress超详细指南</title>
    <url>/2024/06/22/k8s-nginx/</url>
    <content><![CDATA[<h1 id="k8s安装nginx-Ingress超详细指南"><a href="#k8s安装nginx-Ingress超详细指南" class="headerlink" title="k8s安装nginx Ingress超详细指南"></a>k8s安装nginx Ingress超详细指南</h1><p>在本全面的 Ingress 指南中，您将学习如何在 Kubernetes上<strong>设置 Nginx Ingress控制器</strong>并使用 DNS <a href="https://so.csdn.net/so/search?q=%E9%85%8D%E7%BD%AE&spm=1001.2101.3001.7020">配置</a> Ingress。</p>
<p>目前有两种 <a href="https://so.csdn.net/so/search?q=Nginx&spm=1001.2101.3001.7020">Nginx</a> Ingress 控制器。</p>
<ol>
<li><a href="https://github.com/kubernetes/ingress-nginx" title="kubernetes 社区的 Nginx Ingress 控制器">kubernetes 社区的 Nginx Ingress 控制器</a></li>
<li><a href="https://github.com/nginxinc/kubernetes-ingress" title="Nginx Inc 开发的 Nginx Ingress 控制器">Nginx Inc 开发的 Nginx Ingress 控制器</a></li>
</ol>
<p>我们将使用 Kubernetes 社区 Nginx <a href="https://so.csdn.net/so/search?q=%E6%8E%A7%E5%88%B6%E5%99%A8&spm=1001.2101.3001.7020">控制器</a>。</p>
<h3 id="Ingress-Nginx-Ingress-控制器架构"><a href="#Ingress-Nginx-Ingress-控制器架构" class="headerlink" title="Ingress &amp; Nginx Ingress 控制器架构"></a><strong>Ingress &amp; Nginx Ingress 控制器架构</strong></h3><p>下面是使用 Nginx Ingress 控制器的 Kubernetes Ingress 的高级架构。在本指南中，我们将学习如何在体系结构中构建设置。</p>
<p><img src="/img/k8s-nginx/overview.png" alt="Nginx ingress controller deployment architecture"></p>
<h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a><strong>先决条件</strong></h3><ol>
<li>Kubernetes 集群</li>
<li>Kubectl 已安装并已通过 Kubernetes 集群的身份验证。</li>
<li>对 kubernetes 集群的管理员访问权限。</li>
<li>指向 Ingress 控制器负载均衡器 IP 的有效域。（<strong>可选</strong>)</li>
</ol>
<h3 id="Nginx-Ingress-控制器-Kubernetes-清单"><a href="#Nginx-Ingress-控制器-Kubernetes-清单" class="headerlink" title="Nginx Ingress 控制器 Kubernetes 清单"></a>Nginx <a href="https://so.csdn.net/so/search?q=Ingress&spm=1001.2101.3001.7020">Ingress</a> 控制器 Kubernetes 清单</h3><p>本教程中使用的所有 kubernetes 清单都托管在 <a href="https://github.com/techiescamp/nginx-ingress-controller" title="Github 存储库">Github 存储库</a>中。</p>
<p>您可以按照指南直接部署 YAML 文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/techiescamp/nginx-ingress-controller</span><br></pre></td></tr></table></figure>

<p>首先，我们将<strong>通过使用 YAML 清单部署 Nginx 控制器</strong>来了解所有关联的 Kubernetes 对象。一旦我们理解了，我们将<strong>使用 Helm 图表进行部署</strong>。</p>
<blockquote>
<p><strong>注意</strong>：如果你想了解所有的 Nginx Ingress 控制器对象以及它们之间的关系，我建议你从 repo 中单独创建对象。了解其工作原理后，可以使用单个清单或 helm 图表来部署它。</p>
</blockquote>
<p>如果要一次性部署所有对象，请在 termal 中打开克隆的存储库。</p>
<p>cd 进入 manifest 文件夹并执行以下命令。它将部署此博客中介绍的所有清单。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f .</span><br></pre></td></tr></table></figure>

<h3 id="使用清单部署-Nginx-Ingress-控制器"><a href="#使用清单部署-Nginx-Ingress-控制器" class="headerlink" title="使用清单部署 Nginx Ingress 控制器"></a><strong>使用清单部署 Nginx Ingress 控制器</strong></h3><p>我们需要部署以下 Kubernetes 对象才能拥有<strong>一个有效的 Nginx 控制器</strong>。</p>
<ol>
<li><code>ingress-nginx</code>命名空间</li>
<li><strong>Nginx 准入控制器</strong>的服务帐户&#x2F;角色&#x2F;集群角色</li>
<li>验证 Webhook 配置</li>
<li>用于创建&#x2F;更新 Webhook CA 捆绑包的作业</li>
<li><strong>Nginx 控制器部署</strong>的服务帐户&#x2F;角色&#x2F;集群角色</li>
<li>Nginx 控制器配置图</li>
<li>Nginx 控制器和准入控制器的服务</li>
<li>Ingress 控制器部署</li>
</ol>
<blockquote>
<p><strong>注意</strong>：您可以自己创建所有清单，也可以使用 Github 存储库。但是，我强烈建议您仔细检查每个清单并了解您正在部署的内容。</p>
</blockquote>
<h4 id="需要准入控制器和验证-Webhook"><a href="#需要准入控制器和验证-Webhook" class="headerlink" title="需要准入控制器和验证 Webhook"></a>需要准入控制器和验证 Webhook</h4><p>Kubernetes Admission Controller 是一小段代码，用于在创建 Kubernetes 对象之前对其进行验证或更新。在本例中，它是<strong>用于验证 Ingress 对象的准入控制器</strong>。准入控制器代码是侦听<code>8443</code>端口的 Nginx 控制器的一部分。</p>
<p>为什么需要 Ingress <strong>控制器？</strong></p>
<p>如果没有准入控制器，则可以部署**可能包含错误配置的 **Ingress 对象。错误的配置可能会破坏与 Ingress 控制器关联的所有 Ingress 规则。</p>
<p>使用准入控制器后，如果部署配置错误的 Ingress 对象，则会引发错误。这样，您可以确保您创建的 Ingress 对象具有正确的配置，并且不会破坏路由规则。</p>
<p>以下是 Nginx 的准入控制器的工作方式。</p>
<p><img src="/img/k8s-nginx/workflow.png" alt="nginx ingress controller validation admission controller explained."></p>
<ol>
<li>部署 Ingress YAML 时，验证允许会截获请求。</li>
<li>然后，Kubernetes API 根据准入 Webhook 终结点将 Ingress 对象发送到验证准入控制器服务终结点。</li>
<li>Service 将请求发送到端口 8443 上的 Nginx 部署，以验证 ingress 对象。</li>
<li>然后，准入控制器向 k8s API 发送响应。</li>
<li>如果响应有效，API 将创建 ingress 对象。</li>
</ol>
<p>现在，让我们从为 Ingress 控制器创建 Kubernetes 对象开始。</p>
<blockquote>
<p><strong>注意</strong>：在以下各节中，您不必复制和创建 YAML 文件。您可以直接使用存储库中的文件并部署它。我在这里给出了完整的 YAML 以供参考。</p>
</blockquote>
<h4 id="创建-Namespace"><a href="#创建-Namespace" class="headerlink" title="创建 Namespace"></a>创建 Namespace</h4><p>我们将把所有Nginx控制器对象部署在 <code>ingress-nginx</code> 命名空间中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create ns ingress-nginx</span><br></pre></td></tr></table></figure>

<h4 id="创建-Admin-控制器角色和服务帐户"><a href="#创建-Admin-控制器角色和服务帐户" class="headerlink" title="创建 Admin 控制器角色和服务帐户"></a>创建 Admin 控制器角色和服务帐户</h4><p>我们需要一个具有所需权限的 Role 和 ClusterRole，并绑定到 <code>ingress-nginx-admission</code> 服务帐户。</p>
<p>创建一个名为 <code>admission-service-account.yaml</code> 的文件。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">admissionregistration.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">validatingwebhookconfigurations</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br></pre></td></tr></table></figure>

<p>部署清单</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f admission-service-account.yaml </span><br></pre></td></tr></table></figure>

<h4 id="创建验证-Webhook-配置"><a href="#创建验证-Webhook-配置" class="headerlink" title="创建验证 Webhook 配置"></a>创建验证 Webhook 配置</h4><p>创建一个名为 <code>validating-webhook.yaml</code> 的文件，并复制以下内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">admissionregistration.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ValidatingWebhookConfiguration</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="attr">webhooks:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">admissionReviewVersions:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">v1</span></span><br><span class="line">  <span class="attr">clientConfig:</span></span><br><span class="line">    <span class="attr">service:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">ingress-nginx-controller-admission</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/networking/v1/ingresses</span></span><br><span class="line">  <span class="attr">failurePolicy:</span> <span class="string">Fail</span></span><br><span class="line">  <span class="attr">matchPolicy:</span> <span class="string">Equivalent</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">validate.nginx.ingress.kubernetes.io</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">    <span class="attr">apiVersions:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">v1</span></span><br><span class="line">    <span class="attr">operations:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">CREATE</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">UPDATE</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">sideEffects:</span> <span class="string">None</span></span><br></pre></td></tr></table></figure>

<p>创建 <code>ValidatingWebhookConfiguration</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f validating-webhook.yaml</span><br></pre></td></tr></table></figure>

<h4 id="部署-Job-更新-Webhook-证书"><a href="#部署-Job-更新-Webhook-证书" class="headerlink" title="部署 Job 更新 Webhook 证书"></a>部署 Job 更新 Webhook 证书</h4><p><code>ValidatingWebhookConfiguration</code> 只在 HTTPS 上有效，所以它需要一个 CA bundle。</p>
<p>我们使用 <a href="https://github.com/jet/kube-webhook-certgen" title="kube-webhook-certgen">kube-webhook-certgen</a> 与第一个 job 一起生成 CA 证书包。生成的CA证书存储在一个名为 <code>ingress-nginx-admission </code>的秘密文件中。</p>
<p>创建一个名为 <code>jobs.yaml</code> 的文件，并复制以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission-create</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">ingress-nginx-admission-create</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--namespace=$(POD_NAMESPACE)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--secret-name=ingress-nginx-admission</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">create</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">OnFailure</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">ingress-nginx-admission</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-admission-patch</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">ingress-nginx-admission-patch</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--webhook-name=ingress-nginx-admission</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--namespace=$(POD_NAMESPACE)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--patch-mutating=false</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--secret-name=ingress-nginx-admission</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--patch-failure-policy=Fail</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20231011-8b53cabe0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">patch</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">OnFailure</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">ingress-nginx-admission</span></span><br></pre></td></tr></table></figure>

<p>创建 jobs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f jobs.yaml</span><br></pre></td></tr></table></figure>

<p>使用以下命令验证 jobs 完成情况。</p>
<p>一旦作业被执行，就可以describe  <code>ValidatingWebhookConfigurationand</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl describe ValidatingWebhookConfiguration ingress-nginx-admission</span><br></pre></td></tr></table></figure>

<p><img src="/img/k8s-nginx/conf.png"></p>
<h4 id="创建-Ingress-控制器角色和服务帐户"><a href="#创建-Ingress-控制器角色和服务帐户" class="headerlink" title="创建 Ingress 控制器角色和服务帐户"></a>创建 Ingress 控制器角色和服务帐户</h4><p>创建名为 <code>ingress-service-account.yaml</code> 的文件，并复制以下内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">admission-webhook</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingressclasses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resourceNames:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingress-controller-leader</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">networking.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingressclasses</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br></pre></td></tr></table></figure>

<p> 部署清单</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f ingress-service-account.yaml</span><br></pre></td></tr></table></figure>

<h4 id="创建-Configmap"><a href="#创建-Configmap" class="headerlink" title="创建 Configmap"></a>创建 Configmap</h4><p>有了configmap，你可以自定义 Nginx 的设置。例如，可以设置自定义 headers 和大多数 Nginx 设置。</p>
<p>有关所有支持的配置，请参阅<a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/" title="官方社区文档">官方社区文档</a>。</p>
<p>创建名为 <code>services.yaml </code>的文件并复制以下内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">externalTrafficPolicy:</span> <span class="string">Local</span></span><br><span class="line">  <span class="attr">ipFamilies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">IPv4</span></span><br><span class="line">  <span class="attr">ipFamilyPolicy:</span> <span class="string">SingleStack</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">http</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">https</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller-admission</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">appProtocol:</span> <span class="string">https</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">https-webhook</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">webhook</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br></pre></td></tr></table></figure>

<p>创建服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f services.yaml</span><br></pre></td></tr></table></figure>

<p><code>ingress-nginx-controller </code>service 在正在部署的相应云平台<strong>中创建负载均衡器</strong>。</p>
<p>您可以使用以下命令获取负载均衡器 IP&#x2F;DNS。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl --namespace ingress-nginx get services -o wide -w ingress-nginx-controller</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意</strong>：对于每个云提供商，您可以使用特定的注释将静态 IP 地址和其他配置映射到 Loadbalancer。</p>
</blockquote>
<h4 id="创建-Ingress-Controller-部署"><a href="#创建-Ingress-Controller-部署" class="headerlink" title="创建 Ingress Controller 部署"></a>创建 Ingress Controller 部署</h4><p>创建名为 <code>deployment.yaml </code>的文件并复制以下内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">minReadySeconds:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/component:</span> <span class="string">controller</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/instance:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--election-id=ingress-controller-leader</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--controller-class=k8s.io/ingress-nginx</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/ingress-nginx-controller</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--validating-webhook=:8443</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--validating-webhook-certificate=/usr/local/certificates/cert</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--validating-webhook-key=/usr/local/certificates/key</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">fieldRef:</span></span><br><span class="line">              <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LD_PRELOAD</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">/usr/local/lib/libmimalloc.so</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.k8s.io/ingress-nginx/controller:v1.9.5</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">lifecycle:</span></span><br><span class="line">          <span class="attr">preStop:</span></span><br><span class="line">            <span class="attr">exec:</span></span><br><span class="line">              <span class="attr">command:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="string">/wait-shutdown</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">controller</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8443</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">webhook</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">90Mi</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">capabilities:</span></span><br><span class="line">            <span class="attr">add:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="attr">drop:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">          <span class="attr">runAsUser:</span> <span class="number">101</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/usr/local/certificates/</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">webhook-cert</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">webhook-cert</span></span><br><span class="line">        <span class="attr">secret:</span></span><br><span class="line">          <span class="attr">secretName:</span> <span class="string">ingress-nginx-admission</span></span><br></pre></td></tr></table></figure>

<p>创建部署。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f deployment.yaml</span><br></pre></td></tr></table></figure>

<p>要确保部署正常工作，请检查容器状态。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n ingress-nginx</span><br></pre></td></tr></table></figure>

<h3 id="验证-Ingress-Controller-部署"><a href="#验证-Ingress-Controller-部署" class="headerlink" title="验证 Ingress Controller 部署"></a>验证 Ingress Controller 部署</h3><p>您可以使用服务创建的 LoadBlancer 终结点验证 Ingress 控制器部署。</p>
<p>Nginx Ingress 控制器具有默认后端。Ingress 中没有条目的所有请求都将转到此默认后端。</p>
<p>我们将使用默认后端验证控制器。</p>
<p>获取 Loadbalancer 终端节点，尝试使用它。您应该收到 404 错误，如下所示。</p>
<p><img src="/img/k8s-nginx/404.png"></p>
<p>现在尝试使用 curl 访问 &#x2F;heathz url，如下所示。你应该得到 200 的回复。将 <LOAD-BALANCER-ENDPOINT> 替换为您的 Loadbalancer 终端节点。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://&lt;LOAD-BALANCER-ENDPOINT&gt;/healthz</span><br></pre></td></tr></table></figure>

<p><img src="/img/k8s-nginx/curl.png"></p>
<h3 id="Nginx-Ingress-Controller-Helm-部署"><a href="#Nginx-Ingress-Controller-Helm-部署" class="headerlink" title="Nginx Ingress Controller Helm 部署"></a><strong>Nginx Ingress Controller Helm 部署</strong></h3><p>如果您是 Helm 用户，则可以使用社区 Helm 图表部署 Ingress Controller。 ValidatingWebhookConfiguration 默认处于禁用状态。</p>
<p>部署 helm 图表。如果 <code>ingress-nginx </code>不存在，它将创建命名空间。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm upgrade --install ingress-nginx ingress-nginx \</span><br><span class="line">  --repo https://kubernetes.github.io/ingress-nginx \</span><br><span class="line">  --namespace ingress-nginx --create-namespace</span><br></pre></td></tr></table></figure>

<p>验证 helm 版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm list -n ingress-nginx</span><br></pre></td></tr></table></figure>

<p>若要清理资源，请卸载该版本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm uninstall ingress-nginx -n ingress-nginx</span><br></pre></td></tr></table></figure>

<h3 id="将域名映射到-Nginx-Ingress-Loadbalancer-IP"><a href="#将域名映射到-Nginx-Ingress-Loadbalancer-IP" class="headerlink" title="将域名映射到 Nginx Ingress Loadbalancer IP"></a>将域名映射到 Nginx Ingress Loadbalancer IP</h3><p>Ingress 的主要目标是<strong>接收运行在 Kubernetes 上的服务的外部流量</strong>。理想情况下，在项目中，DNS 将映射到 Ingress 控制器负载均衡器 IP。</p>
<p>这可以通过<strong>具有您拥有的域名的相应 DNS 提供商</strong>来完成。</p>
<blockquote>
<p><strong>信息</strong>：对于面向 Internet 的应用，它将是指向负载均衡器的公共 IP 的公共 DNS。如果是内部应用，则它将是映射到专用负载均衡器 IP 的组织专用 DNS。</p>
</blockquote>
<h4 id="单个-DNS-映射"><a href="#单个-DNS-映射" class="headerlink" title="单个 DNS 映射"></a>单个 DNS 映射</h4><p>您可以将单个域作为 A 记录直接映射<strong>到负载均衡器 IP</strong>。使用此选项，Ingress 控制器只能有一个域和多个基于路径的流量路由。</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www.example.com --&gt; Loadbalancer IP</span><br></pre></td></tr></table></figure>

<p>您还可以使用此模型进行基于路径的路由。</p>
<p>几个例子，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.example.com/app1</span><br><span class="line">http://www.example.com/app2</span><br><span class="line">http://www.example.com/app1/api</span><br><span class="line">http://ww.example.com/app2/api</span><br></pre></td></tr></table></figure>

<h4 id="通配符-DNS-映射"><a href="#通配符-DNS-映射" class="headerlink" title="通配符 DNS 映射"></a>通配符 DNS 映射</h4><p>如果<strong>将通配符 DNS 映射到负载均衡器</strong>，则可以通过 Ingress 获得动态 DNS 终结点。</p>
<p>在 DNS 记录中添加通配符条目后，需要在 Ingress 对象中提及所需的 DNS，Nginx Ingress 控制器将负责将其路由到所需的服务终结点。</p>
<p>例如，检查以下两个映射。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*.example.com --&gt; Loadbalancer IP</span><br><span class="line">*.apps.example.com --&gt; Loadbalancer IP </span><br></pre></td></tr></table></figure>

<p>这样，**您可以通过单个 **Ingress <strong>控制器拥有多个动态子域</strong>，并且每个 DNS 都可以拥有自己的基于路径的路由。</p>
<p>几个例子，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#URL one</span></span><br><span class="line"> </span><br><span class="line">http://demo1.example.com/api</span><br><span class="line">http://demo1.example.com/api/v1</span><br><span class="line">http://demo1.example.com/api/v2</span><br><span class="line"> </span><br><span class="line"><span class="comment">#app specific urls</span></span><br><span class="line"> </span><br><span class="line">http://grafana.apps.example.com</span><br><span class="line">http://prometheus.apps.example.com</span><br><span class="line"> </span><br><span class="line"><span class="comment">#URL two</span></span><br><span class="line"> </span><br><span class="line">http://demo2.apps.example.com/api</span><br><span class="line">http://demo2.apps.example.com/api/v1</span><br><span class="line">http://demo2.apps.example.com/api/v2</span><br></pre></td></tr></table></figure>

<p>出于演示目的，我已<strong>将通配符 DNS 映射到 LoadBalancer IP</strong>。根据您的 DNS 提供商，您可以添加 DNS 记录。</p>
<p>下图显示了我用于此博客演示的 DNS 记录。<strong>我使用了 EKS</strong>，因此我有一个<strong>网络负载均衡器终端节点的 DNS，</strong>而不是 Loadnbalacer IP，它将是一个 CNAME。在 GKE 的情况下，您将获得一个 IP，在这种情况下，您需要创建一个 A 记录。</p>
<p><img src="/img/k8s-nginx/eks.png" alt="nginx 入口控制器 DNS 映射"></p>
<h3 id="部署-Demo-应用程序"><a href="#部署-Demo-应用程序" class="headerlink" title="部署 Demo 应用程序"></a>部署 Demo 应用程序</h3><p>为了测试 Ingress ，我们将部署一个演示应用程序，并向其添加一个 ClusterIp 服务。此应用程序只能在群集中访问，而不能进入。</p>
<p>**步骤1： **创建名为 dev 的命名空间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create namespace dev</span><br></pre></td></tr></table></figure>

<p><strong>步骤2：</strong>创建名为hello-app.yaml的文件，并复制以下内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hello-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">hello</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">hello</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&quot;gcr.io/google-samples/hello-app:2.0&quot;</span></span><br></pre></td></tr></table></figure>

<p><strong>步骤3：</strong>使用 kubectl 创建部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f hello-app.yaml</span><br></pre></td></tr></table></figure>

<p>检查部署状态。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get deployments -n dev</span><br></pre></td></tr></table></figure>

<p><strong>步骤5：</strong>创建一个名为并复制以下内容的文件并保存该文件。<code>hello-app-service.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hello-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">hello</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">hello</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure>

<p><strong>步骤6：</strong>使用 kubectl 创建服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create -f hello-app-service.yaml</span><br></pre></td></tr></table></figure>

<h3 id="为应用程序创建-Ingress-对象"><a href="#为应用程序创建-Ingress-对象" class="headerlink" title="为应用程序创建 Ingress 对象"></a><strong>为应用程序创建 Ingress 对象</strong></h3><p>现在，让我们创建一个 Ingress 对象，<strong>以使用 DNS 访问我们的 hello 应用</strong>。Ingress 对象只不过是一组路由规则。</p>
<p>如果你想知道ingress对象是如何连接到 Nginx 控制器的，ingress 控制器 pod 连接到 ingress API来检查规则，并相应地更新它的 nginx .conf。</p>
<p>因为我用 DNS 提供程序映射了通配符DNS (*.apps.mlopshub.com)，所以我将使用 demo.apps.mlopshub.com 指向 hello app 服务。</p>
<p><strong>步骤1：</strong>创建一个名为<code>ingress.yaml文件</code></p>
<p><strong>步骤2：</strong>复制以下内容并保存文件。</p>
<p>替换<code>demo.apps.mlopshub.com``dev``dev</code>为您的域名。此外，我们在命名空间中创建此Ingress 对象，因为 hello 应用正在命名空间中运行。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">&quot;demo.apps.mlopshub.com&quot;</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">service:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">hello-service</span></span><br><span class="line">              <span class="attr">port:</span></span><br><span class="line">                <span class="attr">number:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>

<p><strong>步骤3：</strong>描述为检查配置而创建的 Ingress 对象。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl describe ingress  -n dev</span><br></pre></td></tr></table></figure>

<p>现在，如果我尝试访问域<code>demo.apps.mlopshub.com</code>，我将能够访问hello应用程序，如下所示。（您应该将其替换为您的域名）</p>
<p><img src="/img/k8s-nginx/hello-world.png"></p>
<p>您可能会在浏览器中遇到 https 错误。在这种情况下，您可以使用 curl 命令来验证 Ingress 端点。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl demo.apps.mlopshub.com</span><br></pre></td></tr></table></figure>

<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>在本文中，我们学习了如何设置 Nginx Ingress 控制器。</p>
<p>这很容易上手。但是，对于项目实现，请确保您完成所有 Nginx 配置并<strong>根据要求进行调整</strong>。</p>
<p>使用 Nginx 控制器配置映射，您可以配置所有 Nginx 设置，而无需重新部署控制器。</p>
]]></content>
      <categories>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Spring AI 和 LLM 实现数据库查询</title>
    <url>/2024/06/21/springai-llm-database/</url>
    <content><![CDATA[<h1 id="使用Spring-AI-和-LLM-实现数据库查询"><a href="#使用Spring-AI-和-LLM-实现数据库查询" class="headerlink" title="使用Spring AI 和 LLM 实现数据库查询"></a>使用Spring AI 和 LLM 实现数据库查询</h1><p><a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/tree/master" title="AIDocumentLibraryChat">AIDocumentLibraryChat</a> 项目已扩展为支持提问来搜索<a href="https://so.csdn.net/so/search?q=%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93&spm=1001.2101.3001.7020">关系数据库</a>。用户可以输入一个问题，然后嵌入搜索相关的数据库表和列来回答问题。然后，LLM 获取相关表的数据库架构，并根据找到的表和列生成一个 SQL 查询，来展示结果回答问题。</p>
<h3 id="数据集和元数据"><a href="#数据集和元数据" class="headerlink" title="数据集和元数据"></a>数据集和元数据</h3><p>使用的开源数据集有 6 个表，彼此之间有关系。它包含有关博物馆和艺术品的数据。为了获得有用的问题查询，必须为数据集提供元数据，并且必须在嵌入中转换元数据。</p>
<p><img src="/img/spring-ai/metadata.png" alt="数据集和元数据">​</p>
<p>为了使 LLM 能够找到所需的表和列，它需要知道它们的名称和描述。对于像 museum 表这样的所有数据表，元数据都存储在 column_metadata 和 table_metadata 表中。它们的数据可以在以下文件中找到: <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/backend/src/main/resources/dbchangelog/data/column_metadata.csv" title="column_metadata.csv">column_metadata.csv</a> 和 <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/backend/src/main/resources/dbchangelog/data/table_metadata.csv" title="table_metadata.csv">table_metadata.csv</a>。它们包含表或列的唯一 ID、名称、描述等。该描述用于创建与问题嵌入进行比较的嵌入。描述的质量对结果有很大的影响，因为更好的描述会使嵌入更精确。提供同义词是提高质量的一种选择。表元数据包含表的模式，以便仅向 LLM 提示符添加相关的表模式。</p>
<h3 id="嵌入"><a href="#嵌入" class="headerlink" title="嵌入"></a>嵌入</h3><p>为了在 Postgresql 中存储嵌入，使用了向量扩展。可以使用 OpenAI 端点或 <a href="https://docs.spring.io/spring-ai/reference/" title="Spring AI">Spring AI</a> 提供的 ONNX 库创建嵌入。创建了三种类型的嵌入：</p>
<ul>
<li><code>Tabledescription</code>嵌入</li>
<li><code>Columndescription</code>嵌入</li>
<li><code>Rowcolumn</code>嵌入</li>
</ul>
<p><code>Tabledescription</code> 嵌入有一个基于表描述的向量，嵌入有 tablename、datatype &#x3D; table 和元数据中的元数据 id。<br><code>Columndescription</code> 嵌入有一个基于列描述的向量，嵌入有表名、带列名的数据名、datatype &#x3D; column 和元数据中的元数据 id。</p>
<p><code>Rowcolumn</code> 嵌入有一个基于内容行列值的向量。用于美术作品的样式或主题，以便能够使用问题中的值。元数据具有datatype &#x3D; row、作为 dataname 的列名、表名和元数据 id。</p>
<h3 id="实现搜索"><a href="#实现搜索" class="headerlink" title="实现搜索"></a>实现搜索</h3><p>搜索有 3 个步骤：</p>
<ol>
<li>检索嵌入</li>
<li>创建提示</li>
<li>执行查询并返回结果</li>
</ol>
<h4 id="检索嵌入"><a href="#检索嵌入" class="headerlink" title="检索嵌入"></a>检索嵌入</h4><p>为了从具有向量扩展的 Postgresql 数据库中读取嵌入，Spring AI 使用 <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/backend/src/main/java/ch/xxx/aidoclibchat/adapter/repository/DocumentVSRepositoryBean.java" title="DocumentVSRepositoryBean">DocumentVSRepositoryBean</a> 中的 VectorStore 类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">retrieve</span><span class="params">(String query, DataType dataType)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">this</span>.vectorStore.similaritySearch(</span><br><span class="line">    SearchRequest.query(query).withFilterExpression(</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">Filter</span>.Expression(ExpressionType.EQ,</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">Key</span>(MetaData.DATATYPE), <span class="keyword">new</span> <span class="title class_">Value</span>(dataType.toString()))));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>VectorStore 为用户的<a href="https://so.csdn.net/so/search?q=%E6%9F%A5%E8%AF%A2&spm=1001.2101.3001.7020">查询</a>提供相似性搜索。查询在嵌入中转换，并在头值中使用用于数据类型的FilterExpression 返回结果。</p>
<p> <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/backend/src/main/java/ch/xxx/aidoclibchat/usecase/service/TableService.java" title="TableService">TableService</a> 类在 retrieveEmbeddings 方法中使用存储库:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> EmbeddingContainer <span class="title function_">retrieveEmbeddings</span><span class="params">(SearchDto searchDto)</span> &#123;</span><br><span class="line">  <span class="type">var</span> <span class="variable">tableDocuments</span> <span class="operator">=</span> <span class="built_in">this</span>.documentVsRepository.retrieve(</span><br><span class="line">    searchDto.getSearchString(), MetaData.DataType.TABLE, </span><br><span class="line">    searchDto.getResultAmount());</span><br><span class="line">  <span class="type">var</span> <span class="variable">columnDocuments</span> <span class="operator">=</span> <span class="built_in">this</span>.documentVsRepository.retrieve(</span><br><span class="line">    searchDto.getSearchString(), MetaData.DataType.COLUMN,</span><br><span class="line">    searchDto.getResultAmount());</span><br><span class="line">  List&lt;String&gt; rowSearchStrs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="keyword">if</span>(searchDto.getSearchString().split(<span class="string">&quot;[ -.;,]&quot;</span>).length &gt; <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">tokens</span> <span class="operator">=</span> List.of(searchDto.getSearchString()</span><br><span class="line">      .split(<span class="string">&quot;[ -.;,]&quot;</span>));		</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;tokens.size();i = i+<span class="number">3</span>) &#123;</span><br><span class="line">      rowSearchStrs.add(tokens.size() &lt;= i + <span class="number">3</span> ? <span class="string">&quot;&quot;</span> : </span><br><span class="line">        tokens.subList(i, tokens.size() &gt;= i +<span class="number">6</span> ? i+<span class="number">6</span> :      </span><br><span class="line">        tokens.size()).stream().collect(Collectors.joining(<span class="string">&quot; &quot;</span>)));</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">var</span> <span class="variable">rowDocuments</span> <span class="operator">=</span> rowSearchStrs.stream().filter(myStr -&gt; !myStr.isBlank())  </span><br><span class="line">    .flatMap(myStr -&gt; <span class="built_in">this</span>.documentVsRepository.retrieve(myStr, </span><br><span class="line">       MetaData.DataType.ROW, searchDto.getResultAmount()).stream())</span><br><span class="line">    .toList();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">EmbeddingContainer</span>(tableDocuments, columnDocuments, </span><br><span class="line">    rowDocuments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，documentVsRepository 用于根据用户的搜索字符串检索带有表&#x2F;列嵌入的文档。然后，将搜索字符串分成6个单词的块，以搜索具有行嵌入的文档。行嵌入只是一个单词，为了获得低距离，查询字符串必须很短;否则，由于查询中的所有其他单词，距离会增加。然后使用块来检索带有嵌入的行文档。</p>
<h4 id="创建提示词"><a href="#创建提示词" class="headerlink" title="创建提示词"></a>创建提示词</h4><p>提示词是通过 createPrompt 方法在 TablesService 类中创建的:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Prompt <span class="title function_">createPrompt</span><span class="params">(SearchDto searchDto, </span></span><br><span class="line"><span class="params">  EmbeddingContainer documentContainer)</span> &#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="type">Float</span> <span class="variable">minRowDistance</span> <span class="operator">=</span> documentContainer.rowDocuments().stream()</span><br><span class="line">    .map(myDoc -&gt; (Float) myDoc.getMetadata().getOrDefault(MetaData.DISTANCE,  </span><br><span class="line">      <span class="number">1.0f</span>)).sorted().findFirst().orElse(<span class="number">1.0f</span>);</span><br><span class="line">  LOGGER.info(<span class="string">&quot;MinRowDistance: &#123;&#125;&quot;</span>, minRowDistance);</span><br><span class="line">  <span class="type">var</span> <span class="variable">sortedRowDocs</span> <span class="operator">=</span> documentContainer.rowDocuments().stream()</span><br><span class="line">    .sorted(<span class="built_in">this</span>.compareDistance()).toList();</span><br><span class="line">  <span class="type">var</span> <span class="variable">tableColumnNames</span> <span class="operator">=</span> <span class="built_in">this</span>.createTableColumnNames(documentContainer);</span><br><span class="line">  List&lt;TableNameSchema&gt; tableRecords = <span class="built_in">this</span>.tableMetadataRepository</span><br><span class="line">    .findByTableNameIn(tableColumnNames.tableNames()).stream()</span><br><span class="line">      .map(tableMetaData -&gt; <span class="keyword">new</span> <span class="title class_">TableNameSchema</span>(tableMetaData.getTableName(), </span><br><span class="line">        tableMetaData.getTableDdl())).collect(Collectors.toList());</span><br><span class="line">  <span class="keyword">final</span> AtomicReference&lt;String&gt; joinColumn = <span class="keyword">new</span> <span class="title class_">AtomicReference</span>&lt;String&gt;(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">final</span> AtomicReference&lt;String&gt; joinTable = <span class="keyword">new</span> <span class="title class_">AtomicReference</span>&lt;String&gt;(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">final</span> AtomicReference&lt;String&gt; columnValue = </span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">AtomicReference</span>&lt;String&gt;(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  sortedRowDocs.stream().filter(myDoc -&gt; minRowDistance &lt;= MAX_ROW_DISTANCE)</span><br><span class="line">    .filter(myRowDoc -&gt; tableRecords.stream().filter(myRecord -&gt;  </span><br><span class="line">      myRecord.name().equals(myRowDoc.getMetadata()</span><br><span class="line">        .get(MetaData.TABLE_NAME))).findFirst().isEmpty())</span><br><span class="line">    .findFirst().ifPresent(myRowDoc -&gt; &#123;</span><br><span class="line">      joinTable.set(((String) myRowDoc.getMetadata()</span><br><span class="line">        .get(MetaData.TABLE_NAME)));</span><br><span class="line">      joinColumn.set(((String) myRowDoc.getMetadata()</span><br><span class="line">        .get(MetaData.DATANAME)));</span><br><span class="line">      tableColumnNames.columnNames().add(((String) myRowDoc.getMetadata()</span><br><span class="line">        .get(MetaData.DATANAME)));</span><br><span class="line">      columnValue.set(myRowDoc.getContent());</span><br><span class="line">      <span class="built_in">this</span>.tableMetadataRepository.findByTableNameIn(</span><br><span class="line">        List.of(((String) myRowDoc.getMetadata().get(MetaData.TABLE_NAME))))</span><br><span class="line">          .stream().map(myTableMetadata -&gt; <span class="keyword">new</span> <span class="title class_">TableNameSchema</span>(</span><br><span class="line">            myTableMetadata.getTableName(),</span><br><span class="line">            myTableMetadata.getTableDdl())).findFirst()</span><br><span class="line">         .ifPresent(myRecord -&gt; tableRecords.add(myRecord));</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="type">var</span> <span class="variable">messages</span> <span class="operator">=</span> createMessages(searchDto, minRowDistance, tableColumnNames, </span><br><span class="line">    tableRecords, joinColumn, joinTable, columnValue);</span><br><span class="line">  <span class="type">Prompt</span> <span class="variable">prompt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Prompt</span>(messages);</span><br><span class="line">  <span class="keyword">return</span> prompt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，过滤掉 rowDocuments 的最小距离。然后创建一个按距离排序的文档列表行。<br>方法 createTableColumnNames(…) 创建包含一组列名和一个表名列表的 tableColumnNames 记录。tableColumnNames 记录是通过首先筛选距离最小的 3 个表来创建的。然后过滤掉这些表中距离最小的列。</p>
<p>然后通过使用 <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/backend/src/main/java/ch/xxx/aidoclibchat/adapter/repository/TableMetadataRepositoryBean.java" title="TableMetadataRepository">TableMetadataRepository</a> 将表名映射到模式 DDL 字符串来创建表记录。</p>
<p>然后对已排序的行文档进行 MAX_ROW_DISTANCE 过滤，并设置 joinColumn、joinTable 和columnValue 值。然后使用 <code>TableMetadataRepository</code> 创建 <code>TableNameSchema</code> 并将其添加到tableRecords 中。</p>
<p>现在可以设置 systemPrompt 中的占位符和可选的 columnMatch:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">systemPrompt</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">Include these columns in the query: &#123;columns&#125; \n</span></span><br><span class="line"><span class="string">Only use the following tables: &#123;schemas&#125;;\n</span></span><br><span class="line"><span class="string">%s \n</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">columnMatch</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">Join this column: &#123;joinColumn&#125; of this table: &#123;joinTable&#125; where the column has this value: &#123;columnValue&#125;\n</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>方法 createMessages(…) 获取用来替换 {columns} 占位符的列集。它获取 tableRecords，用表的 ddl 替换 {schemas} 占位符。如果行距离低于阈值，则在字符串占位符%s处添加属性columnMatch。然后替换占位符 {joinColumn}、{joinTable} 和 {columnValue}。</p>
<p>有了关于所需列的信息、包含这些列的表的模式和行匹配的可选连接的信息，LLM 就能够创建一个合理的 <a href="https://so.csdn.net/so/search?q=SQL&spm=1001.2101.3001.7020">SQL</a> 查询。</p>
<h4 id="执行查询并返回结果"><a href="#执行查询并返回结果" class="headerlink" title="执行查询并返回结果"></a>执行查询并返回结果</h4><p>查询在以下方法 <code>createQuery(...)</code> 中执行：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> SqlRowSet <span class="title function_">searchTables</span><span class="params">(SearchDto searchDto)</span> &#123;</span><br><span class="line">  <span class="type">EmbeddingContainer</span> <span class="variable">documentContainer</span> <span class="operator">=</span> <span class="built_in">this</span>.retrieveEmbeddings(searchDto);</span><br><span class="line">  <span class="type">Prompt</span> <span class="variable">prompt</span> <span class="operator">=</span> createPrompt(searchDto, documentContainer);</span><br><span class="line">  <span class="type">String</span> <span class="variable">sqlQuery</span> <span class="operator">=</span> createQuery(prompt);</span><br><span class="line">  LOGGER.info(<span class="string">&quot;Sql query: &#123;&#125;&quot;</span>, sqlQuery);</span><br><span class="line">  <span class="type">SqlRowSet</span> <span class="variable">rowSet</span> <span class="operator">=</span> <span class="built_in">this</span>.jdbcTemplate.queryForRowSet(sqlQuery);</span><br><span class="line">  <span class="keyword">return</span> rowSet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，调用准备数据和创建 SQL 查询的方法，然后使用 queryForRowSet(…) 在数据库上执行查询。返回 SqlRowSet。<br><a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/backend/src/main/java/ch/xxx/aidoclibchat/usecase/mapping/TableMapper.java" title="TableMapper">TableMapper</a> 类使用 map(…) 方法将结果转换为 TableSearchDto 类:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> TableSearchDto <span class="title function_">map</span><span class="params">(SqlRowSet rowSet, String question)</span> &#123;</span><br><span class="line">  List&lt;Map&lt;String, String&gt;&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">  <span class="keyword">while</span> (rowSet.next()) &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">AtomicInteger</span> <span class="variable">atomicIndex</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">1</span>);</span><br><span class="line">    Map&lt;String, String&gt; myRow = List.of(rowSet</span><br><span class="line">      .getMetaData().getColumnNames()).stream()</span><br><span class="line">      .map(myCol -&gt; Map.entry(</span><br><span class="line">        <span class="built_in">this</span>.createPropertyName(myCol, rowSet, atomicIndex),</span><br><span class="line">          Optional.ofNullable(rowSet.getObject(</span><br><span class="line">            atomicIndex.get()))</span><br><span class="line">          .map(myOb -&gt; myOb.toString()).orElse(<span class="string">&quot;&quot;</span>)))</span><br><span class="line">      .peek(x -&gt; atomicIndex.set(atomicIndex.get() + <span class="number">1</span>))</span><br><span class="line">      .collect(Collectors.toMap(myEntry -&gt; myEntry.getKey(), </span><br><span class="line">        myEntry -&gt; myEntry.getValue()));</span><br><span class="line">    result.add(myRow);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TableSearchDto</span>(question, result, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，创建结果映射的结果列表。然后，对每行迭代 rowSet，以创建列名作为键、列值作为值的映射。这样可以灵活地返回列的数量及其结果。createPropertyName(…) 将索引整数添加到映射键中，以支持重复的键名。</p>
<h3 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h3><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><p>Spring AI 非常支持创建具有灵活占位符数量的提示。创建嵌入和查询向量表也得到了很好的支持。</p>
<p>获取合理的查询结果需要必须为列和表提供的元数据。创建良好的元数据是一项随列和表的数量线性扩展的工作。为需要它们的列实现嵌入是一项额外的工作。</p>
<p>结果是，像 OpenAI 或 Ollama 这样具有“<a href="https://ollama.com/library/sqlcoder" title="sqlcoder：70b-alpha-q6_K">sqlcoder：70b-alpha-q6_K</a>”模型的 LLM 可以回答以下问题：“显示艺术品名称和具有现实主义风格和肖像主题的博物馆名称。</p>
<p>LLM 可以在边界内回答与元数据有一定契合度的自然语言问题。对于一个免费的 OpenAI 帐户来说，所需的嵌入量太大了，而“sqlcoder：70b-alpha-q6_K”是最小的模型，结果合理。</p>
<p>LLM 提供了一种与关系数据库交互的新方法。在开始为数据库提供自然语言接口的项目之前，必须考虑工作量和预期结果。</p>
<p>LLM 可以帮助解决中小型复杂度的问题，用户应该对数据库有一定的了解。</p>
<h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><p>后端返回的结果是以键为列名和值为列值的映射列表。返回的映射条目的数量是未知的，因此显示结果的表必须支持灵活数量的列。示例 JSON 结果如下所示：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;question&quot;</span><span class="punctuation">:</span><span class="string">&quot;...&quot;</span><span class="punctuation">,</span><span class="attr">&quot;resultList&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;1_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Portrait of Margaret in Skating Costume&quot;</span><span class="punctuation">,</span><span class="attr">&quot;2_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Philadelphia Museum of Art&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;1_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Portrait of Mary Adeline Williams&quot;</span><span class="punctuation">,</span><span class="attr">&quot;2_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Philadelphia Museum of Art&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;1_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Portrait of a Little Girl&quot;</span><span class="punctuation">,</span><span class="attr">&quot;2_name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Philadelphia Museum of Art&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;resultAmount&quot;</span><span class="punctuation">:</span><span class="number">100</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>resultList 属性包含一个带有属性键和值的 JavaScript 对象数组。为了能够在 Angular Material Table 组件中显示列名和值，使用了这些属性:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> columnData: Map&lt;string, string&gt;[] = [];</span><br><span class="line"><span class="type">protected</span> <span class="variable">columnNames</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Set</span>&lt;string&gt;();</span><br></pre></td></tr></table></figure>

<p> <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/frontend/src/angular/src/app/table-search/table-search.component.ts" title="table-search.component.ts">table-search.component.ts</a> 的 getColumnNames(…) 方法用于在属性中转换JSON结果:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="title function_">getColumnNames</span><span class="params">(tableSearch: TableSearch)</span>: Set&lt;string&gt; &#123;</span><br><span class="line">  <span class="type">const</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Set</span>&lt;string&gt;();</span><br><span class="line">  <span class="built_in">this</span>.columnData = [];</span><br><span class="line">  <span class="type">const</span> <span class="variable">myList</span> <span class="operator">=</span> !tableSearch?.resultList ? [] : tableSearch.resultList;</span><br><span class="line">  myList.forEach((value) =&gt; &#123;</span><br><span class="line">    <span class="type">const</span> <span class="variable">myMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Map</span>&lt;string, string&gt;();</span><br><span class="line">    Object.entries(value).forEach((entry) =&gt; &#123;</span><br><span class="line">      result.add(entry[<span class="number">0</span>]);</span><br><span class="line">      myMap.set(entry[<span class="number">0</span>], entry[<span class="number">1</span>]);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">this</span>.columnData.push(myMap);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，创建结果集，并将 columnData 属性设置为空数组。然后，创建 myList 并使用 forEach(…)迭代。对于 resultList 中的每个对象，将创建一个新的 Map。对于对象的每个属性，将创建一个新条目，以属性名作为键，以属性值作为值。在columnData 映射上设置条目，并将属性名称添加到结果集中。将完成的映射推入 columnData 数组，返回结果并设置为 columnNames 属性。</p>
<p>然后在 columnNames 集中可以得到一组列名，在 columnData 中可以得到一个从列名到列值的映射。</p>
<p>模板 <a href="https://github.com/Angular2Guy/AIDocumentLibraryChat/blob/master/frontend/src/angular/src/app/table-search/table-search.component.html" title="table-search.component.html">table-search.component.html</a> 包含 material 表：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">@if(searchResult &amp;&amp; searchResult.resultList?.length) &#123;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">mat-table</span> [<span class="attr">dataSource</span>]=<span class="string">&quot;columnData&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ng-container</span> *<span class="attr">ngFor</span>=<span class="string">&quot;let disCol of columnNames&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">matColumnDef</span>=<span class="string">&quot;&#123;&#123; disCol &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">mat-header-cell</span> *<span class="attr">matHeaderCellDef</span>&gt;</span>&#123;&#123; disCol &#125;&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">mat-cell</span> *<span class="attr">matCellDef</span>=<span class="string">&quot;let element&quot;</span>&gt;</span>&#123;&#123; element.get(disCol) &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ng-container</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">mat-header-row</span> *<span class="attr">matHeaderRowDef</span>=<span class="string">&quot;columnNames&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">mat-row</span> *<span class="attr">matRowDef</span>=<span class="string">&quot;let row; columns: columnNames&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先，在 resultList中 检查 searchResult 是否存在和对象。然后，使用 columnData 映射的数据源创建表。表头行设置为 &lt;tr mat-header-row *matHeaderRowDef&#x3D;”columnNames”&gt;</tr> 以包含columnNames。表的行和列是用 &lt;tr mat-row *matRowDef&#x3D;”let row;列:columnNames “ &gt; &lt; &#x2F; tr &gt;。</p>
<ul>
<li>单元格是通过迭代 columnname 来创建的: &lt;ng-container *ngFor&#x3D;”let disCol of columnNames” matColumnDef&#x3D;”“&gt;。</li>
<li>标题单元格创建: &lt;th mat-header-cell *matHeaderCellDef&gt;</th>。</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在 LLM 的帮助下质疑数据库需要对元数据进行一些努力，并且对数据库包含的内容有一个粗略的了解。AI&#x2F;LLM 不适合创建查询，因为 SQL 查询需要正确性。需要一个相当大的模型来获得所需的查询正确性，并且需要 GPU 加速才能进行生产性使用。</p>
<p>设计良好的 UI，用户可以在其中拖放结果表中的表列，这可能是满足要求的不错选择。Angular Material Components 很好地支持拖放。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>LLM</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Trivy 扫描 Docker 镜像漏洞详细指南</title>
    <url>/2024/06/22/trivy-docker-scan/</url>
    <content><![CDATA[<h1 id="使用-Trivy-扫描-Docker-镜像漏洞详细指南"><a href="#使用-Trivy-扫描-Docker-镜像漏洞详细指南" class="headerlink" title="使用 Trivy 扫描 Docker 镜像漏洞详细指南"></a>使用 Trivy 扫描 Docker 镜像漏洞详细指南</h1><p>本文介绍了使用 Trivy 扫描程序保护 <a href="https://so.csdn.net/so/search?q=Docker&spm=1001.2101.3001.7020">Docker</a> 镜像免受潜在漏洞侵害的基本步骤。</p>
<p>Trivy 扫描程序是一个开源工具，可用于扫描 Docker <a href="https://so.csdn.net/so/search?q=%E9%95%9C%E5%83%8F&spm=1001.2101.3001.7020">镜像</a>的漏洞。</p>
<p>Docker 镜像是打包和部署应用程序的简单方法。但是，如果它们包含漏洞，也可能存在安全风险。它可能是库中的问题、应用程序依赖项中的漏洞、容器配置错误等。</p>
<p>Trivy 是一个<a href="https://so.csdn.net/so/search?q=%E6%9C%89%E6%95%88%E7%9A%84&spm=1001.2101.3001.7020">有效的</a> Docker 漏洞扫描程序，支持多个漏洞数据库，包括常见漏洞和披露 （<a href="https://www.cvedetails.com/" title="CVE） 数据库">CVE） 数据库</a>。Trivy 还可以扫描错误的配置和安全性。</p>
<h3 id="使用-Trivy-扫描-Docker-镜像"><a href="#使用-Trivy-扫描-Docker-镜像" class="headerlink" title="使用 Trivy 扫描 Docker 镜像"></a>使用 Trivy 扫描 Docker 镜像</h3><p>下图显示了高级组件和容器扫描工作流。<br><img src="/img/trivy-docker/workflow.gif">​<br>首先，你需要在系统或要实现 Docker 镜像扫描的 <strong>CI 代理节点</strong>上安装 trivy。</p>
<p>可以在 <a href="https://aquasecurity.github.io/trivy/v0.18.3/installation/" title="Trivy 官网">Trivy 官网</a>找到安装步骤。</p>
<p>使用 Trivy 扫描 Docker 镜像非常简单。只需要使用要扫描的镜像名称运行以下trivy命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trivy image &lt;image-name&gt;</span><br></pre></td></tr></table></figure>

<p>例如，工作站中有一个名为 <strong><code>techiescamp/pet-clinic-app</code></strong> 的镜像。它是带有 java spring boot 应用程序的 docker 镜像。</p>
<p>可以使用以下命令扫描镜像。Trivy 会扫描镜像中的两个漏洞，就像镜像中的 java jar 一样。扫描结果将以人类可读的格式显示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trivy image techiescamp/pet-clinic-app:1.0.0</span><br></pre></td></tr></table></figure>

<p>扫描结果显示镜像中没有高或严重漏洞。<br><img src="/img/trivy-docker/result.png">​<br>此外，它还显示了 Docker 镜像内 jar 的** 2 个高漏洞**。<br><img src="/img/trivy-docker/result2.png">​<br>Trivy 可以以多种方式使用。以下是一些高级用法示例：</p>
<h4 id="扫描严重级别"><a href="#扫描严重级别" class="headerlink" title="扫描严重级别"></a><strong>扫描严重级别</strong></h4><p>Trivy可以扫描特定严重级别的漏洞。为此，使用来指定需要扫描的漏洞严重级别。<code>--severity &lt;severity&gt;</code></p>
<h4 id="Docker-镜像构建-pipline-中的-Trivy"><a href="#Docker-镜像构建-pipline-中的-Trivy" class="headerlink" title="Docker 镜像构建 pipline 中的 Trivy"></a>Docker 镜像构建 pipline 中的 Trivy</h4><p>Trivy 在 CI&#x2F;CD 管道中起着关键作用，用于 docker 镜像构建。使用 trivy 扫描 CI&#x2F;CD 管道中的漏洞，以确保在生产环境中部署 seecure 镜像。</p>
<p>在 CI&#x2F;CD piepline 中使用时，如果镜像中存在任何漏洞，<strong>pipline 作业应会失败</strong>。严重性取决于组织的安全合规性。例如，有些项目可能有严格的准则，使生成失败，因为严重性为 HIGH 和 CRITICAL。构建失败的最佳方法是使用退出代码。</p>
<p>可以在trivy命令中使用  和  标志，如下所示。如果发现给定严重性的任何漏洞，它将使用非零退出代码使Trivy退出。<code>--severity``--exit-code 1</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trivy image --severity HIGH,CRITICAL  --exit-code 1 techiescamp/pet-clinic-app:1.0.0</span><br></pre></td></tr></table></figure>

<p>此外，还可以将漏洞报告作为构建失败通知发送给开发人员和 DevOps 工程师。</p>
<p>推荐的方法是使用 Trivy 配置文件来设置扫描的默认值。您可以使用此文件来满足特定于项目需求的扫描要求。</p>
<p>下面是一个 文件示例：<code>trivy.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">timeout:</span> <span class="string">10m</span></span><br><span class="line"><span class="attr">format:</span> <span class="string">json</span></span><br><span class="line"><span class="attr">dependency-tree:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">list-all-pkgs:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">exit-code:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">output:</span> <span class="string">result.json</span></span><br><span class="line"><span class="attr">severity:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">HIGH</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">CRITICAL</span></span><br><span class="line"><span class="attr">scan:</span></span><br><span class="line">  <span class="attr">skip-dirs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/lib64</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/lib</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/usr/lib</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/usr/include</span></span><br><span class="line"> </span><br><span class="line">  <span class="attr">security-checks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">vuln</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">secret</span></span><br><span class="line"><span class="attr">vulnerability:</span></span><br><span class="line">  <span class="attr">type:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">os</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">library</span></span><br><span class="line">  <span class="attr">ignore-unfixed:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">db:</span></span><br><span class="line">  <span class="attr">skip-update:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>指定配置文件扫描：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trivy image --config path/to/trivy.yaml your-image-name:tag</span><br></pre></td></tr></table></figure>

<h4 id="输出为-JSON"><a href="#输出为-JSON" class="headerlink" title="输出为 JSON"></a>输出为 JSON</h4><p>Trivy 也可以提供 JSON 格式的输出。要做到这一点，使用 <code>--format json</code>，它将以 json 格式显示扫描结果。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trivy image --ignore-unfixed java:0.1</span><br></pre></td></tr></table></figure>

<h4 id="扫描-Docker-tar-镜像"><a href="#扫描-Docker-tar-镜像" class="headerlink" title="扫描 Docker tar 镜像"></a>扫描 Docker tar 镜像</h4><p>在某些情况下，您可能具有 tar 格式的 Docker 镜像。在这种情况下，您可以使用trivy扫描tar格式的镜像。</p>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">trivy image --input petclinic-app.tar</span><br></pre></td></tr></table></figure>

<h3 id="Trivy-在-Docker-镜像中扫描什么"><a href="#Trivy-在-Docker-镜像中扫描什么" class="headerlink" title="Trivy 在 Docker 镜像中扫描什么"></a>Trivy 在 Docker 镜像中扫描什么</h3><p>以下是 Trivy 扫描的 Docker 镜像中的关键元素。</p>
<ol>
<li><strong>Trivy 可以扫描各种包管理器中的漏洞，包括 apt、yum、apk 和 npm。</strong>这意味着 Trivy 可以扫描使用各种不同软件依赖项的镜像中的漏洞。</li>
<li><strong>Trivy 可以扫描 Linux 和 Windows 镜像****中的漏洞。</strong>这意味着您可以使用 Trivy 扫描将在 Linux 或 Windows 主机上运行的镜像。</li>
<li><strong>Trivy 可以扫描以各种不同格式存储的</strong>镜像<strong>中的漏洞，包括 Docker</strong> 镜像<strong>、tar 存档和文件系统。</strong>这意味着您可以使用 Trivy 扫描存储在各种不同位置的镜像。</li>
<li><strong>Trivy 可以扫描在各种环境中运行的 Docker 镜像中的漏洞，包括普通 Docker 容器和 Kubernetes Pod。</strong>这意味着您可以使用 Trivy 扫描在您使用的任何环境中运行的镜像。</li>
</ol>
<h3 id="使用-Trivy-扫描-Docker-镜像漏洞的好处"><a href="#使用-Trivy-扫描-Docker-镜像漏洞的好处" class="headerlink" title="使用 Trivy 扫描 Docker 镜像漏洞的好处"></a>使用 Trivy 扫描 Docker 镜像漏洞的好处</h3><p>下图显示了 CVE 数据库中的漏洞总数。正如你所看到的，它每年都在增加。<br><img src="/img/trivy-docker/total.png"><br>考虑到漏洞的增加，使用 Trivy 扫描 Docker 镜像有很多好处。</p>
<p>一些好处包括：</p>
<ol>
<li><strong>识别漏洞：</strong>Trivy 可以识别 Docker 镜像中使用的包中的漏洞。这在基本镜像修补和应用程序镜像构建中特别有用。</li>
<li><strong>改善安全状况：</strong>通过扫描镜像中的漏洞，可以改善组织的安全状况。</li>
<li><strong>安全合规性：</strong>作为安全合规性的一部分，许多组织需要检查其 Docker 镜像是否存在漏洞。您可以在 Trivy 的帮助下达到这些标准。</li>
</ol>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>在开发过程中以及 CI&#x2F;CD 过程中，必须扫描 Docker 镜像漏洞。这可确保您遵循良好的 DevSecOps 原则并实施最佳实践，以在基于 Docker 的环境中保持强大的安全性。</p>
]]></content>
      <categories>
        <category>云原生</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>安全</tag>
      </tags>
  </entry>
</search>
